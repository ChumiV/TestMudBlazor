@inject ITestService testService
@inject IQuestionService questionService
@inject IAnswerService answerService
@inject ICheckedAnswerService checkedService

<MudText Typo="Typo.h4">@_test.Title</MudText>

Вопросы:
<MudPagination Rectangular="true" Variant="Variant.Outlined" ShowPreviousButton="false" ShowNextButton="false" @bind-Count="@_length" Selected="@_selected" SelectedChanged="@getNewQuestion" />

<div>
    <MudCard Class="col-md-8">
        <MudCardContent Class="col-md-11">
            <MudText Typo="Typo.h5">@_question.Title</MudText>
            <MudCardMedia Class="myImage col-md-12" Image="@_question.Image"  style="height: 500px;"/>

            @if (_answerIsWrong)
            {
                <MudText Class="myNote" Typo="Typo.body1">@_question.Note</MudText>
            }

            <MudText Class="col-md-12 myNote" Typo="Typo.body1">Выберите ответ:</MudText>

            @foreach (var item in _question.Answers)
            {
                @if (_check == null)
                {
                    <MudButton Class="col-md-12 myAnswerButton" Variant="Variant.Outlined" @onclick="getNewAnswer">@item.Title</MudButton>
                }
                else
                {
                    if (_check.AnswerId == item.Id && !item.IsTrue)
                    {
                        <MudButton Class="col-md-12 myAnswerButton" Variant="Variant.Filled" Color="Color.Error">@item.Title</MudButton>
                    }
                    else if (item.IsTrue)
                    {
                        <MudButton Class="col-md-12 myAnswerButton" Variant="Variant.Filled" Color="Color.Success">@item.Title</MudButton>
                    }
                    else
                    {
                        <MudButton Class="col-md-12 myAnswerButton" Variant="Variant.Outlined">@item.Title</MudButton>
                    }
                }
            }
        </MudCardContent>
        <MudCardActions>
            <MudButton Class="col-md-3 myMenuButton" Variant="Variant.Filled" Color="Color.Primary">Завершить тест</MudButton>
            
            @if (_check != null && _selected < _length - 1)
            {
            <MudButton Class="col-md-3 myMenuButton" Variant="Variant.Filled" Color="Color.Primary" @onclick="@nextQuestion">Далее</MudButton>
            }
        </MudCardActions>
    </MudCard>


</div>

@code{
    private Test _test;
    private Question _question;
    private CheckedAnswer _check;
    public int _length = 0;
    public int _selected = 0;
    public bool _answerIsWrong = false;

    protected override void OnInitialized()
    {
        _test = testService.GetTest(0);
        _test.Questions = questionService.GetQuestions(0);

        _length = _test.Questions.Count();
        if (_length > 0)
        {
            getNewQuestion(1);
        }
    }

    public void getNewQuestion(int n)
    {
        _selected = n;

        _question = _test.Questions[_selected - 1];
        _question.Answers = answerService.GetAnswers(_question.Id);
        _check = checkedService.GetCheckedAnswer(_question.Id);
        if (_check != null)
        {
            foreach (var item in _question.Answers)
            {
                if (item.Id == _check.AnswerId)
                    _answerIsWrong = !item.IsTrue;
            }
        }
    }

    public void nextQuestion()
    {
        _selected++;
        getNewQuestion(_selected);
    }

    public void getNewAnswer()
    {
        //сохранение нового ответа
        //обновление страницы
        getNewQuestion(_selected);
    }
}